定时器：
	 time=setInterval(function(){}，时间间隔);每隔多长时间就会执行一次
	当第一个函数不是匿名函数，只需要调用函数名即可,对于定时器必须开一个，然后需要注意开和管一定要对立起来 就是用if  else来将其分开
	time=setTimeout（执行的事件，时间间隔）；延时型
取消定时器：
	clearInterval（time）将会关闭特定的定时器
	clearTimeout(time)
----------------------------------------------------------------------------
 数码时间：
	Date()函数来获取本地时间的；var data=new Date()
	data.getHours() ,data.getMintues(),data.Seconds()就是来获取对应的时，分，秒 但是得到的是数字  必须要用函数来将其转化为字符串并将其连接，根据连接起来的字符串用循环来定位对应图片的地址 但是str[i]来获取字符串的具体字符方法对于低版本浏览器不兼容，所以用charAt()函数来获取
	data.getFull(),data.getMonth()+1,data.getDate(),dataDay()
	年		月			日	星期（0是星期日）
-----------------------------------------------------------------------------
offsetLeft/offsetTop/offsetWidth/offsetHeight 获取
离左边距离     上边	盒子宽度	盒子高度

对于offset来说，有一个重大隐患就是当我的div如果是有border时 就会出问题，所以只有没有border的时候可以用，当有border就的必须用parseInt(cur)
-----------------------------------------------------------------------------

结点：（子节点就指的是第一层）
	文本结点(就算是空格也算是文本结点)、元素结点(就指的是HTML标签)。
	通过获取的对象来获取它的子节点 用到的是oUl.children
	1.获取子节点：
		childNodes（但是得到的不仅仅是元素结点而且还有文本结点） nodeType判断结点的类型 1代表元素结点，代表文本结点。children得到的是仅仅是元素结点 所以对于取子结点一般都用children，childNodes有兼容问题
	2获取父结点：
		parentNode获取父结点（就是上一级的父结点）  例如点击链接，隐藏它父结点li
	2 offsetParent
		获取元素页面上的实际位置 它是找它的父结点，哪个有相对定位 哪个有谁就是它要找的父节点，就是一层一层的往上找，直到有相对定位的那个
	3 首尾子结点：
		fristChild(IE)、fristElementChild(高级)
		lastChild（IE）、lastElementChild（高级）
	4 兄弟结点：
		nextSibling、nextElementSibling
		previousSibling、previousElementSibling
-----------------------------------------------------------------------------
操作元素属性：
	一：oDiv.style.display="block";
	二：oDiv.style["display"]="block";
	三：oDiv.getAttribute(名称) //获取属性
	    oDiv.setAttribute(名称，值)//设置
	    oDiv.removeAttribute(名称)//删除
-------------------------------------------------------------------------
用ClassName选取元素
	var oUl=document.getElementById('ul1');
	var aBox=getByClass(oUl,'box');就是获取oUl下的class为box的元素
-----------------------------------------------------------------------------

创建，插入、删除DOM元素
	创建：1 首先oLi=document.createElement('li');要添加的标签名
	      2  oUl.appendChild(oLi);//父级.appendChild（子结点）添加在末尾,但是如果是oLi是从其他的父级拿来的那么它还有一个用处就是将父级的元素删除。
	插入： 1 oUl.insertBefore(oLi,插入谁之前)  所以在第二个参数我们就需要获取到所有的同类元素然后决定放在谁之前，一般就是aLI[0] 但是在第一个时候我们找不到aLi[0]所以就会在IE中出现错误 用到if（aLi.length>0）{oUl.insertBefore(oLi,aLi[0])}else{oUl.appendChild(oLi)} 对于内容就用到oLI.innerHTML给添加的Li赋值
	删除：对于删除就是用到  父级.removeChild(子结点)  可能用到this.parentNode
-----------------------------------------------------------------------------
文档碎片：
	可以比喻为一个装东西的袋子 就是先把创建出来的东西放在袋子中然后再将袋子给到父结点 显示
-----------------------------------------------------------------------------
表格：
	1、对于表格来说，有thead和tbody 对于获取表格的信息有具体的一些简单的办法首先获取出表格的对象oTab=document.getElementById('tab1');然后再获取表格中的具体东西oTab.tBodies[0].rows[1].cells[1]就取到了具体的东西  
	
	2、之后就是搜索只需要将你要查找的那一列的innerHTML拿出来和输入的相比即可
-----------------------------------------------------------------------------
搜索：
	1、取消大小写：主要的是一般是搜索的时候会不分大小写的，所以我们要将所有的都转化为小写然后再比较 就可以避免大小写的问题了 就是  内容.toLowerCase()
	2、模糊搜索： 可以是正则表达式   。。.innerHTML.search（字符串）只要找到了函数就会返回第一个字符在其中的位置 ，没找到就会返回-1
	3、多条输入：就是说我们习惯了搜索时候用空格来区分字符，所以有一个var arr=原字符串.split（' '）;用空格将字符串切成多个字符串 然后用循环来做